<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-12-10T15:32:00+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Jongya’s Git Page</title><subtitle>새내기 프로그래머 Jongya의 블로그입니다.</subtitle><author><name>Jongya</name></author><entry><title type="html">Github Desktop 에디터 추가</title><link href="http://localhost:4000/how_to_use_git/2022/11/26/20221126_002.html" rel="alternate" type="text/html" title="Github Desktop 에디터 추가" /><published>2022-11-26T23:46:06+09:00</published><updated>2022-11-26T23:46:06+09:00</updated><id>http://localhost:4000/how_to_use_git/2022/11/26/20221126_002</id><content type="html" xml:base="http://localhost:4000/how_to_use_git/2022/11/26/20221126_002.html"><![CDATA[<!--postNo: 20221126_002-->

<h3 id="오류-사항">오류 사항</h3>

<ul>
  <li>Github Desktop 에서 <code class="language-plaintext highlighter-rouge">Select your editor in Preference</code> 에서 editor 안보임</li>
  <li>본 글에서는 OS : 윈도우10, editor : VScode 기준입니다.</li>
</ul>

<h3 id="오류-원인-추론">오류 원인 추론</h3>

<ul>
  <li>(1) Github Desktop과 연동 불가능한 editor인 경우.</li>
  <li>(2) 에디터를 설치파일이 아닌 Zip 파일로 설치했거나, 기본 설치 경로가 아닌 곳에 설치한 경우.</li>
  <li>그 외 원인이 있다면 피드백 부탁드립니다. :)</li>
</ul>

<h3 id="1-github-desktop과-연동-가능한-editor-확인">(1) Github Desktop과 연동 가능한 editor 확인</h3>
<p>Github Desktop과 연동 가능한 editor 목록은 아래 사이트에서 확인이 가능합니다.<br />
<a href="https://docs.github.com/en/desktop/installing-and-configuring-github-desktop/configuring-and-customizing-github-desktop/configuring-a-default-editor">GitHub Docs : default-editor</a></p>

<h3 id="2-해결-방법-1--editor-재설치">(2) 해결 방법 1 : editor 재설치</h3>
<p>editor를 재설치하며, 설치 경로 또한 권장 경로 그대로를 사용해줍니다.</p>

<p><img src="/assets/images/20221126_002_002.png" alt="" width="700" align="left" />
<img src="/assets/images/20221126_002_003.png" alt="" width="700" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<p>재부팅 후 Visual Studio Code 를 외부 편집기로 사용할 수 있다.</p>

<p><img src="/assets/images/20221126_002_004.png" alt="" width="700" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<h3 id="2-해결-방법-2--환경-변수-path-추가">(2) 해결 방법 2 : 환경 변수 PATH 추가</h3>
<p>고급 시스템 설정 메뉴를 들어가줍니다.</p>

<p><img src="/assets/images/20221126_002_005.png" alt="" width="700" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<p>환경 변수 → 시스템 변수의 PATH → 편집</p>

<p><img src="/assets/images/20221126_002_006.png" alt="" width="700" align="left" />
<img src="/assets/images/20221126_002_007.png" alt="" width="700" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<p>찾아보기 → 프로그램이 설치된 폴더 선택 후 → 확인<br />
확인을 눌러 설정을 저장해줍니다.</p>

<p><img src="/assets/images/20221126_002_008.png" alt="" width="700" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<p>중요! 재부팅을 해야 설정이 적용됩니다.</p>

<p><img src="/assets/images/20221126_002_009.png" alt="" width="700" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>]]></content><author><name>Jongya</name></author><category term="How_To_Use_Git" /><category term="Git" /><category term="GitHub" /><category term="Desktop" /><category term="깃허브" /><category term="데스크탑" /><category term="에디터" /><category term="안보일때" /><category term="윈도우" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">깃허브 블로그 페이지 만들기 (윈도우/맥)</title><link href="http://localhost:4000/how_to_use_git/2022/11/26/20221126_001.html" rel="alternate" type="text/html" title="깃허브 블로그 페이지 만들기 (윈도우/맥)" /><published>2022-11-26T22:46:06+09:00</published><updated>2022-11-26T22:46:06+09:00</updated><id>http://localhost:4000/how_to_use_git/2022/11/26/20221126_001</id><content type="html" xml:base="http://localhost:4000/how_to_use_git/2022/11/26/20221126_001.html"><![CDATA[<!-- postNo: 20221126_001-->

<h2 id="1-인트로">1. 인트로</h2>
<p>프로그래밍을 배우면서, <u><b>블로그 운영의 필요성</b></u>을 느꼈습니다.<br />
어떤 블로그가 내게 맞을까.. 고민을 하다가!<br />
<u><b>html이나 마크다운에 대한 공부</b></u>도 할 겸 깃허브 블로그를 선택했습니다.</p>

<p>시중에서 제공하는 블로그 서비스들보다는 다루기 어렵지만,<br />
블로그를 만들고 보니 꽤나 뿌듯함이 있습니다.</p>

<p>처음 깃허브 블로그를 만들어보려는 분들께 자그마한 도움이 되었으면 하여<br />
제가 적용했던 방법, 겪었던 어려움들을 공유합니다.</p>

<blockquote>
  <p><em>윈도우/맥 모두 가능합니다.</em><br />
<em>운영체제에 따라 방법이 다른 경우, 별도 표기했습니다.</em></p>
</blockquote>

<h2 id="2-깃허브-repository-만들기">2. 깃허브 Repository 만들기</h2>

<h3 id="1-깃허브-계정-만들기">1) 깃허브 계정 만들기</h3>
<p>깃허브 계정은 간단하게 만들 수 있습니다.<br />
아래 깃허브 사이트에서 <code class="language-plaintext highlighter-rouge">Sign up</code> 버튼을 클릭해 가입을 진행해주세요.<br />
(계정이 있으신 분은 Sign in 해주시면 됩니다.)</p>

<blockquote>
  <p>GitHub : <a href="https://github.com">https://github.com</a></p>
</blockquote>

<p><img src="/assets/images/20221126_001_001.png" alt="" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<h3 id="2-깃허브-repository-만들기-1">2) 깃허브 Repository 만들기</h3>
<p>화면 오른쪽 상단에서 ‘Your respository’ 를 클릭해주세요.</p>
<blockquote>
  <p>Repository : ‘저장소’입니다.</p>
</blockquote>

<p><img src="/assets/images/20221126_001_002.png" alt="저장소" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<p><code class="language-plaintext highlighter-rouge">NEW</code> 버튼을 눌러 새로운 repository(저장소)를 만들어 봅시다.</p>

<p><img src="/assets/images/20221126_001_003.png" alt="" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<p>Repository Name(저장소 이름)을 작성 후 <code class="language-plaintext highlighter-rouge">Create repository</code>를 클릭해주세요.</p>

<blockquote>
  <p>💡 Repository Name 은 ` ID.github.io `  형식으로 만드시길 추천드립니다.<br />
이 Repository Name은 향후 블로그 주소가 됩니다.</p>
</blockquote>

<p><img src="/assets/images/20221126_001_004.png" alt="" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<p>repository가 만들어졌습니다. 한 번 들어가볼까요?
<img src="/assets/images/20221126_001_005.png" alt="" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<h3 id="3-깃허브-page-setting">3) 깃허브 Page Setting</h3>
<p>repository 화면에서 settings를 클릭해줍니다.
<img src="/assets/images/20221126_001_006.png" alt="" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<p>page 메뉴에서 아래와 같이 설정한 후, save 해줍니다.
<img src="/assets/images/20221126_001_007.png" alt="" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<p>index.html 파일을 만들어 볼 것입니다.<br />
<code class="language-plaintext highlighter-rouge">ADD file -&gt; Create new file</code> 을 눌러 새로운 파일을 만들어주세요.</p>

<p><img src="/assets/images/20221126_001_008.png" alt="" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<p>빈칸(파일명)에 index.html 을 입력해준 뒤,<br />
파일 내용에는 간단한 html문을 입력해보겠습니다.<br />
작성이 완료되었다면, <code class="language-plaintext highlighter-rouge">Commit new file</code> (새로운 파일 확정)을 눌러주세요.</p>
<blockquote>
  <p>💡 index.html 파일 : 웹 브라우저가 특정 url에 접근하였을때 처음 읽어들이는 파일로, 보여줄 첫 화면 결정해주는 역할을 합니다.</p>
</blockquote>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;html&gt;</span>
    <span class="nt">&lt;body&gt;</span>
        첫 화면입니다. 환영합니다. :)
    <span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</code></pre></div></div>

<p><img src="/assets/images/20221126_001_009.png" alt="" align="left" /></p>

<p>이제 5분 가량 잠시 쉬고 오세요.<br />
잘 쉬고 오셨나요? 그러면 본인의 깃허브 페이지 주소 <code class="language-plaintext highlighter-rouge">ID.github.io</code>로 접속해봅시다.<br />
아래와 같이 index 파일에 적어준 내용이 나온다면 성공!</p>

<p><img src="/assets/images/20221126_001_010.png" alt="" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<h2 id="3-깃허브-페이지-관리-툴-설치">3. 깃허브 페이지 관리 툴 설치</h2>

<h3 id="1-github-desktop-설치">1) Github Desktop 설치</h3>
<p>깃허브 데스크탑을 다운받습니다. <a href="https://desktop.github.com/">GitHub Desktop</a></p>
<blockquote>
  <p>깃허브 데스크탑 : 깃허브 repository와 현재 사용중인 PC를 연동시켜주는 역할을 합니다.</p>
</blockquote>

<h3 id="2-코드-에디터-설치">2) 코드 에디터 설치</h3>
<p>코드 에디터를 설치합니다. 주로 사용하는 코드 에디터가 있다면, 굳이 새로 설치할 필요는 없습니다.<br />
저는 깃허브와 연동성이 좋은 VScode 를 설치했습니다.<br />
<a href="https://code.visualstudio.com/">Visual Studio Code - Code Editing. Redefined</a></p>

<h3 id="3-깃허브-클론-및-동기화">3) 깃허브 클론 및 동기화</h3>
<p>깃허브 데스크탑을 설치한 후, repository를 컴퓨터에 clone 해줍니다.<br />
사용중인 PC의 특정 폴더와 repository를 연결해주는 단계로 이해하시면 편합니다.<br />
아래 이미지들을 따라 해주세요.<br />
<img src="/assets/images/20221126_001_011.png" alt="" align="left" />
<img src="/assets/images/20221126_001_012.png" alt="" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<p>클론 후, repository → pull 을 클릭합니다.<br />
pull 을 통해, 변경 사항을 동기화한 후에, Clone 한 폴더를 찾아가봅시다.<br />
(기본 경로 : /윈도우 기준/ 내문서 -&gt; ID.github.io 폴더)</p>

<p>아까 웹상에서 만든 index.html 파일이 보일 것입니다.<br />
즉, pull은 깃허브 repository의 최신 내용을 PC로 끌어오는(PULL) 기능입니다.</p>

<p><img src="/assets/images/20221126_001_013.png" alt="" align="left" />
<img src="/assets/images/20221126_001_014.png" alt="" align="left" /></p>
<h2 id="이미지-필요--내문서---indexhtml">이미지 필요 : 내문서 -&gt; index.html</h2>
<p><img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<blockquote>
  <ul>
    <li>clone : PC의 특정 폴더와 repository를 연결</li>
    <li>pull : 깃허브 repository의 최신 내용을 PC에 업데이트</li>
    <li>push : PC 폴더의 최신 내용을 깃허브 repository에 업데이트</li>
  </ul>
</blockquote>

<h3 id="4-에디터로-repository-열기">4) 에디터로 Repository 열기</h3>

<p>Open the repository in your external editor 부분을 주목해주세요.<br />
코드 에디터를 통해 repository를 여는 기능입니다.</p>

<p>저는 notepad++ 가 설치되어있어 기본으로 잡히는군요!<br />
본인에게 익숙한 코드 에디터를 option에서 설정하여 사용하시기 바랍니다.<br />
저는 VScode를 사용할 예정입니다.</p>

<p><img src="/assets/images/20221126_001_015.png" alt="" align="left" />
<img src="/assets/images/20221126_001_016.png" alt="" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<blockquote>
  <p>에디터가 보이지 않을 때에는 다음 글을 참고해주세요.<br />
<a href="https://whdrns2013.github.io/how_to_use_git/2022/11/26/20221126_002.html">GitHub Desktop - editor 추가</a></p>
</blockquote>

<p>external editor로 열기를 선택하면, 해당 에디터가 열릴 것입니다.<br />
github 사이트에서 만들었던 index.html 파일 또한 여기서 볼 수 있죠!</p>

<p><img src="/assets/images/20221126_001_017.png" alt="" align="left" />
<img src="/assets/images/20221126_001_018.png" alt="" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<p>인덱스 파일이 보이는 김에 내용을 간단히 수정해볼까요?<br />
저희 삼촌께서 선물해주신 365일 문장달력 문구를 써봤습니다.<br />
이후 꼭 저장!</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;html&gt;</span>

<span class="nt">&lt;body&gt;</span>
    <span class="nt">&lt;/br&gt;</span>
    <span class="nt">&lt;/br&gt;</span>
    <span class="nt">&lt;/br&gt;</span>
    <span class="nt">&lt;/br&gt;</span>
    <span class="nt">&lt;p</span> <span class="na">align=</span><span class="s">"center"</span><span class="nt">&gt;</span>
        당신의 사고를 변화 시켜라.
        <span class="nt">&lt;/br&gt;</span>
        그러면 당신이 살고 있는 세상을 변화시킬 수 있을 것이다.
    <span class="nt">&lt;/p&gt;</span>
<span class="nt">&lt;/body&gt;</span>

<span class="nt">&lt;/html&gt;</span>
</code></pre></div></div>

<p><img src="/assets/images/20221126_001_019.png" alt="" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<p>깃허브 데스크탑 화면으로 돌아가봅시다.<br />
PC에서 진행된 변경사항이 화면에 출력되어있을 것입니다.</p>

<p>(1) Commit to main 을 눌러 변경 사항을 확정하고,<br />
(2) Push를 눌러 깃허브의 repository에 업데이트를 해줍니다.</p>

<p><img src="/assets/images/20221126_001_020.png" alt="" align="left" />
<img src="/assets/images/20221126_001_021.png" alt="" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<p>다시 5~10분의 휴식 시간을 가져봅시다.<br />
5~10분을 기다리는 이유는.. 깃허브 페이지에 적용되는 데 시간이 걸리기 때문입니다.</p>

<p>유료로 사용하면 바로 적용이 된다는 이야기도 듣긴 했지만,<br />
직접 사용해본 게 아니라 정확히는 모르겠네요! 😅</p>

<p>적용이 완료되면, 웹 브라우저를 통해 ID.github.io로 들어갔을 때, 아래와 같은 화면이 보일 것입니다.</p>

<p><img src="/assets/images/20221126_001_022.png" alt="" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<h2 id="4-테마-적용-준비--루비와-지킬">4. 테마 적용 준비 : 루비와 지킬</h2>
<h3 id="1-루비-지킬">1) 루비? 지킬?</h3>

<p>루비는 프로그램 언어 중 하나이며, 지킬은 루비를 기반으로 만들어진 정적 웹 페이지블로그 제작 목적의 툴입니다.<br />
지킬은 마크다운 형식의 글쓰기가 가능하며, 많은 무료 테마(템플릿)가 있기에 사용하기 좋아 많은 깃허브 블로그가 지킬을 사용합니다.</p>

<h3 id="2-루비-설치">2) 루비 설치</h3>

<h4 id="--windows-에서-설치">- Windows 에서 설치</h4>

<p>루비 설치 페이지로 접속하고, 설치 프로그램 다운로드 후 설치해줍니다.</p>

<p><a href="https://rubyinstaller.org/downloads/">https://rubyinstaller.org/downloads/</a></p>

<p>설치시에 PATH에 추가하시겠습니까? 라는 질문이 나올텐데요,
필히 체크하여, PATH에 추가될 수 있도록 해주세요.</p>

<p>이거 안하면 나중에 환경변수에 경로를 추가하는 작업이 필요해 번거롭습니다.<br />
설치가 완료되었다면, 다음 단계로 넘어가면 됩니다.</p>

<p><img src="/assets/images/20221126_001_023.png" alt="" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<h4 id="--mac-에서-설치">- MAC 에서 설치</h4>

<blockquote>
  <p>🤔 MAC은 루비가 기본적으로 설치되어 있지만.. <br />
예전 버전이라 재설치가 필요합니다.<br />
아래에서 Homebrew를 통한 루비 설치 방법을 서술합니다.</p>
</blockquote>

<p>아래 사이트에서 Homebrew 설치 명령어를 복사한 후, Terminal에서 설치해줍니다.
<a href="https://brew.sh/index_ko">Homebrew 설치 : https://brew.sh/index_ko</a></p>

<p><img src="/assets/images/20221126_001_024.png" alt="" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<p>터미널을 통해 설치할 때 PASSWORD 입력을 요구하는데요,<br />
맥 로그인 할 때 사용하는 비밀번호를 입력하면 됩니다.</p>

<p>비밀번호를 입력을 해도 화면에는 안보일겁니다. <br />
보안을 위해 비밀번호를 노출하지 않는 것일 뿐,<br />
입력은 되고 있으니 당황하지 말고 입력 후 엔터를 눌러주세요.</p>

<p><img src="/assets/images/20221126_001_025.png" alt="" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<blockquote>
  <p>홈브루 설치가 안된다면?
<a href="https://whdrns2013.github.io/how_to_use_git/2022/11/26/20221126_003.html">에러 : 맥 홈브루 설치 오류 Not a valid ref: refs/remotes/origin/master</a></p>
</blockquote>

<p>홈브루 설치가 완료되었다면, rbenv를 설치해줍니다.</p>

<div class="language-terminal highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="go">brew install rbenv
</span></code></pre></div></div>

<p><img src="/assets/images/20221126_001_026.png" alt="" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<p>이후 루비를 설치해줍니다.</p>

<div class="language-terminal highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">* rbenv install 2.6.3 #</span>루비 2.6.3 버전 설치
<span class="gp">* rbenv global 2.6.3 #</span>전역 루비 버전 지정
</code></pre></div></div>

<p>아래 명령어를 통해 루비 버전을 확인했을 때, 정상적으로 버전이 나오면 성공입니다.</p>

<div class="language-terminal highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="go">ruby -v
</span></code></pre></div></div>

<p>이후 터미널에서 루비를 편하게 호출할 수 있게 아래 명령어로 세팅해줍니다.</p>

<div class="language-terminal highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">(1) echo 'if which rbenv &gt;</span><span class="w"> </span>/dev/null<span class="p">;</span> <span class="k">then </span><span class="nb">eval</span> <span class="s2">"</span><span class="si">$(</span>rbenv init -<span class="si">)</span><span class="s2">"</span><span class="p">;</span> <span class="k">fi</span><span class="s1">' **&gt;&gt;** **~**/.bash_profile
</span><span class="go">(2) source **~**/.bash_profile
(3) rbenv rehash
</span></code></pre></div></div>

<h3 id="3-지킬-설치">3) 지킬 설치</h3>

<h4 id="--windows-에서-설치-1">- Windows 에서 설치</h4>

<p>cmd 등 프롬프트에서 아래 명령어를 차례대로 실행합니다.</p>

<div class="language-terminal highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="go">(1) gem install jekyll bundler
(2) gem install webrick
</span></code></pre></div></div>

<p><img src="/assets/images/20221126_001_027.png" alt="" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<p>repository가 clone된 폴더로 이동합니다.</p>
<pre><code class="language-Terminal">cd 리포지토리가 클론된 폴더명
</code></pre>

<p><img src="/assets/images/20221126_001_028.png" alt="" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<p>chcp 65001로 인코딩을 진행합니다.</p>
<pre><code class="language-Terminal">chcp 65001
</code></pre>

<p><img src="/assets/images/20221126_001_029.png" alt="" align="left" />
<img src="/assets/images/20221126_001_030.png" alt="" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<p>지킬을 생성할 차례입니다.</p>

<pre><code class="language-Terminal">jekyll new ./ --force
</code></pre>

<blockquote>
  <p>force : 강제 실행. 원래 지킬은 빈 디렉토리(empty directory)에만 설치가 가능합니다.<br />
하지만 지금 디렉토리에는 index.html 파일이 있죠. 때문에 force 명령어로 강제 설치를 진행합니다.</p>
</blockquote>

<p><img src="/assets/images/20221126_001_031.png" alt="" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<p>번들을 설치하고, 로컬 서버에서 지킬을 실행해봅시다.</p>

<div class="language-terminal highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="go">(1) 번들 설치 : bundle install
(2) 지킬 서버 실행 : bundle exec jekyll serve
</span></code></pre></div></div>

<p>아래처럼 나오면 성공입니다.<br />
server address 를 확인해주세요.</p>

<p><img src="/assets/images/20221126_001_032.png" alt="" align="left" />
<img src="/assets/images/20221126_001_033.png" alt="" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<p>서버를 실행했으니, 웹 브라우저를 통해 확인해볼까요?<br />
웹 브라우저를 통해 server address 로 접속시<br />
아래와 같이 index.html 페이지가 보이면 성공입니다.</p>

<p><img src="/assets/images/20221126_001_034.png" alt="" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<h4 id="-mac-에서-설치">-MAC 에서 설치</h4>

<p>터미널에서 <code class="language-plaintext highlighter-rouge">gem install jekyll bundler</code> 명령어를 통해 지킬 번들러를 설치합니다.<br />
아래와 같이 몇 개의 gems가 설치되었다 라는 프린트가 보이면 성공입니다.</p>

<pre><code class="language-Terminal">jekyll 번들러 설치 : gem install jekyll bundler
</code></pre>

<p><img src="/assets/images/20221126_001_035.png" alt="" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<p>이제 지킬을 생성할 차례입니다.</p>

<pre><code class="language-Terminal">jekyll 생성 : jekyll new ./ --force
</code></pre>

<blockquote>
  <p>force : 강제 실행. 원래 지킬은 빈 디렉토리(empty directory)에만 설치가 가능합니다.<br />
하지만 해당 디렉토리에는 index.html 파일이 있죠. 때문에 force 명령어로 강제 설치를 진행합니다.</p>
</blockquote>

<p><img src="/assets/images/20221126_001_036.png" alt="" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<p>번들을 설치하고, 로컬 서버에서 지킬을 실행해봅시다.</p>

<pre><code class="language-Terminal">(1) 번들 설치 : bundle install
</code></pre>

<p><img src="/assets/images/20221126_001_037.png" alt="" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<pre><code class="language-Terminal">(2) 지킬 서버 실행 : bundle exec jekyll serve
</code></pre>

<p>아래처럼 나오면 성공입니다.<br />
server address 를 확인해주세요.</p>

<p><img src="/assets/images/20221126_001_038.png" alt="" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<p>서버를 실행했으니, 웹 브라우저를 통해 확인해볼까요?<br />
웹 브라우저를 통해 server address 로 접속시<br />
아래와 같이 index.html 페이지가 보이면 성공입니다.</p>

<p><img src="/assets/images/20221126_001_039.png" alt="" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<h3 id="4-서버-실행-오류시">4) 서버 실행 오류시</h3>

<p>서버 실행이 제대로 되지 않는다면, 아래 글을 참고해주세요.  <br />
<a href="https://whdrns2013.github.io/how_to_use_git/2022/11/26/20221126_004.html">깃허브 페이지 테마 적용 : Gemfile 오류</a></p>

<h2 id="5-깃허브-페이지-테마-적용">5. 깃허브 페이지 테마 적용</h2>

<h3 id="github-로-push-하기">Github 로 Push 하기</h3>

<p>오랜만에 Github Desktop으로 돌아와봅시다.<br />
Changes탭을 보면, 많은 변경사항이 있습니다.<br />
지금까지 했던 루비 설치, 지킬 설치 등의 변경사항들이죠.</p>

<p><img src="/assets/images/20221126_001_040.png" alt="" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<p>PC에서 진행된 변경사항들을 PUSH하여 깃허브에도 적용해줍시다.</p>

<p>(1) 변경사항들에 대한 정보를 적어준 후 → Commit to main 을 누릅니다.</p>

<p><img src="/assets/images/20221126_001_041.png" alt="" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<p>(2) 이후 Push를 진행합니다.<br />
메인 UI에서도 Push가 가능하고, 상단 Repository 탭에서도 할 수 있습니다.</p>

<p><img src="/assets/images/20221126_001_042.png" alt="" align="left" />
<img src="/assets/images/20221126_001_043.png" alt="" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<h3 id="깃허브-페이지-테마-고르기">깃허브 페이지 테마 고르기!</h3>

<p>Push한 사항은 실제로 적용되는 데 5분에서 10분 가량 소요됩니다.<br />
그 동안 내 블로그에 적용할 테마를 둘러봅시다.</p>

<p><b>지킬 테마 둘러보기</b><br />
마음에 드는 테마를 골라보세요. 지킬 테마를 볼 수 있는 사이트는 여럿 있으며, 아래 두 사이트를 추천합니다.<br />
<a href="https://github.com/topics/jekyll-theme">https://github.com/topics/jekyll-theme</a><br />
[Free Jekyll Themes | Jekyll Themes](https://jekyll-themes.com/free/)</p>

<p><b>마음에 드는 테마 고르기</b><br />
저는 YAT이라는 테마를 선택했습니다.<br />
가독성, 태그기능, 사이드바, 깔끔한 카테고리 기능 등이 마음에 드네요!<br />
검색기능, 댓글기능 등은 추후 추가할 예정입니다.</p>

<p><a href="https://github.com/jeffreytse/jekyll-theme-yat">https://github.com/jeffreytse/jekyll-theme-yat</a></p>

<h3 id="깃허브-페이지블로그-url로-들어가보기">깃허브 페이지(블로그) URL로 들어가보기</h3>

<p><b> 블로그 URL 확인 </b></p>

<p>테마를 고르는 동안 깃허브 PUSH 적용이 끝났을 겁니다.<br />
URL을 통해 내 블로그로 들어가볼까요?<br />
블로그 URL은 깃허브 → repository의 settings → Pages 탭에서 확인할 수 있습니다.</p>

<p><img src="/assets/images/20221126_001_044.png" alt="" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<p>URL을 웹 브라우저에 입력한 후 이동해보면,<br />
VScode 에서 작성했던 index 파일의 문구가 나오는 걸 볼 수 있습니다.<br />
축하합니다! 블로그가 만들어졌어요!</p>

<p><img src="/assets/images/20221126_001_045.png" alt="" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<h3 id="테마-적용하기">테마 적용하기</h3>

<p><b>테마 다운로드</b></p>

<p>골라놨던 테마를 적용시킬 차례입니다.<br />
테마 소개 페이지에서 ‘Download Zip’ 을 통해 압축파일을 받아주세요.</p>

<p><img src="/assets/images/20221126_001_046.png" alt="" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<p><b>테마 파일들 복사 붙여넣기</b></p>

<p>다운받은 파일을 압축을 풀어준 후,<br />
지킬을 설치했던 github repository 디렉토리 안에 파일들을 붙여넣습니다.</p>

<p><img src="/assets/images/20221126_001_047.png" alt="" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<p>중복 파일 경고메세지가 뜨면, 덮어쓰기를 선택해주세요.</p>

<p><img src="/assets/images/20221126_001_048.png" alt="" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<p><b>필요 없는 파일 삭제</b></p>

<p>가장 처음 만들었던 index.html 파일은 이제 필요 없으니 삭제합니다.</p>

<p><img src="/assets/images/20221126_001_049.png" alt="" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<p>더불어, 테마 제작자가 샘플로 만든 파일이 있다면, 함께 삭제해줍니다.<br />
삭제할 파일이 무엇인지는 테마 소개 페이지에서 확인 가능합니다.</p>

<p><img src="/assets/images/20221126_001_050.png" alt="" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<blockquote>
  <p>_config.yml 파일은 삭제하지 말고 다른 이름으로 보관하길 추천합니다.<br />
나중에 블로그 설정할 때 참고가 될 수 있습니다.</p>
</blockquote>

<p><b>로컬에서 테마 적용 확인</b></p>

<p>루비 명령 프롬프트를 실행한 후, 지킬 서버를 실행해주세요.</p>

<pre><code class="language-Terminal">지킬 서버 실행 : bundle exec jekyll serve
</code></pre>

<p>server address로 접속해서 테마 적용된 페이지가 잘 로딩되는지 확인합니다.</p>

<p><img src="/assets/images/20221126_001_051.png" alt="" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<p><b>Github로 Push</b></p>

<p>테마가 잘 적용된 걸 확인했다면<br />
깃허브에 적용을 위해, Github로 Push를 진행해줍니다.<br />
10분 가량 굳은 몸을 풀어줍시다. 스트레칭 하고 오면, 적용되어있을 거에요.</p>

<p><img src="/assets/images/20221126_001_052.png" alt="" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<p>이제 내 깃허브 페이지(블로그) 주소로 접속하면 테마가 적용된 페이지를 볼 수 있습니다.<br />
여기까지 깃허브 블로그 만들기였습니다.<br />
이후 블로그 커스터마이징 방법이나 테마 추천 등은 아래 링크에서 확인해주세요.<br />
고생 많았고, 성공적으로 블로그를 만드신 걸 추천드립니다. :)</p>

<h2 id="to-do">To Do</h2>
<ul>
  <li>테마 추천 글 올리면 보는 사람들에게 도움 많이 될 듯</li>
  <li>깃허브 테마 적용이 안되면 : <a href="https://www.notion.so/Gemfile-4c012a13f0d34b0990d92468b40808e1">깃허브 페이지 테마 적용 : Gemfile 오류</a></li>
  <li>깃허브 블로그 설정 (커스터마이징) 하기</li>
</ul>]]></content><author><name>Jongya</name></author><category term="How_To_Use_Git" /><category term="Git" /><category term="GitHub" /><category term="깃허브" /><category term="블로그" /><category term="만들기" /><category term="윈도우" /><category term="맥" /><category term="MAC" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">지킬 페이지 테마 적용 Gemfile 오류</title><link href="http://localhost:4000/etc/2022/11/26/20221126_004.html" rel="alternate" type="text/html" title="지킬 페이지 테마 적용 Gemfile 오류" /><published>2022-11-26T16:46:06+09:00</published><updated>2022-11-26T16:46:06+09:00</updated><id>http://localhost:4000/etc/2022/11/26/20221126_004</id><content type="html" xml:base="http://localhost:4000/etc/2022/11/26/20221126_004.html"><![CDATA[<!--postNo: 20221126_004-->

<h2 id="오류-확인">오류 확인</h2>

<p><img src="/assets/images/20221126_004_001.png" alt="" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<p>아마도.. 필요한 gem을 찾아 설치하는 과정에서의 오류,<br />
혹은 필요한 gem이 없어서 생기는 오류로 추정된다.</p>

<p>내 경우는 Gemfile 파일 내에 있는 설치 패키지 부분을 수정해줌으로 인해 문제를 해결했다.<br />
테마가 다르면 다른 문제가 생길 수 있으므로, 테마 설명 페이지를 필히 참고하기를 바란다.<br />
한시간을 쩔쩔 매며 원인을 찾았다 ㅠㅠ..</p>

<blockquote>
  <p>오류문구<br />
Gemfile 파싱 도중 오류이며, jekyll-theme-so-simple.gemspec 파일을 로드하지 못한 게 원인이다.<br />
특정 파일에서 jekyll-theme-so-simple.gemspec 파일을 원하나, 이 파일이 설치되지 않았기 때문 으로 추정하였다.</p>
</blockquote>

<h2 id="해결-실마리-잡기">해결 실마리 잡기</h2>

<p><img src="/assets/images/20221126_004_002.png" alt="" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<p>테마 설치 페이지를 통해 해결의 실마리를 잡았다.<br />
기본 설명으로 적혀있는데.. 이를 놓쳤었네 ㅠㅠ</p>

<h2 id="해결--gemfile에-문구-추가하기">해결 : Gemfile에 문구 추가하기</h2>

<p><img src="/assets/images/20221126_004_003.png" alt="" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<p><a href="http://rubygems.org">rubygems.org</a> 에서 해당 테마 파일을 찾도록 내용을 수정</p>

<p><img src="/assets/images/20221126_004_004.png" alt="" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<p>에러 없어지고, 페이지 제대로 로딩됨. 해결.</p>]]></content><author><name>Jongya</name></author><category term="etc" /><category term="gemfile" /><category term="오류" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">MAC 홈브루 설치 오류</title><link href="http://localhost:4000/etc/2022/11/26/20221126_03.html" rel="alternate" type="text/html" title="MAC 홈브루 설치 오류" /><published>2022-11-26T16:46:06+09:00</published><updated>2022-11-26T16:46:06+09:00</updated><id>http://localhost:4000/etc/2022/11/26/20221126_03</id><content type="html" xml:base="http://localhost:4000/etc/2022/11/26/20221126_03.html"><![CDATA[<!--postNo: 20221126_003-->

<h2 id="에러-발생">에러 발생</h2>

<p>터미널을 통해 홈브루 설치를 진행했더니..<br />
그랬더니 아래와 같은 에러가 난다.</p>

<p><img src="/assets/images/20221126_003_001.png" alt="" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<h2 id="에러-원인-탐색">에러 원인 탐색</h2>

<p>홈브루의 문제보다는 깃허브와 PC 사이의 연결 문제일 것이라고 한다.<br />
깃허브 토픽 discussion에서 해결책을 찾아보라고 한다. VPN등을 사용하는 해결책이 있을 것이라고..</p>

<p><img src="/assets/images/20221126_003_002.png" alt="" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" />
<a href="https://github.com/orgs/Homebrew/discussions/666">Unable to install: “fatal: the remote end hung up unexpectedly” · Discussion #666 · Homebrew</a></p>

<h2 id="첫-번째-시도--홈브루-강제-update-실패">첫 번째 시도 : 홈브루 강제 update (실패)</h2>

<p>discussion에서 홈브루를 강제 업데이트 해보라는 의견이 있어 진행해본다.<br />
터미널을 켜고 <code class="language-plaintext highlighter-rouge">brew update --force --verbose</code> 를 입력한다.<br />
업데이트가 완료되었다.</p>

<p><img src="/assets/images/20221126_003_003.png" alt="" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<p>터미널에서 <code class="language-plaintext highlighter-rouge">brew doctor</code>를 호출해 홈브루에 문제가 있는지 확인했는데.. 여전히 문제가 있다.</p>

<h2 id="두-번째-시도--brew-doctor가-제시하는-해결책-성공">두 번째 시도 : brew doctor가 제시하는 해결책 (성공)</h2>

<p>brew doctor에서는 다음과 같은 여섯가지 Warning 메세지가 나왔다.<br />
살펴보면, 파일이 있어야 하는 디렉토리에 없거나 다른 곳에 있다는 오류들로 보인다.</p>

<div class="language-terminal highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="go">(1)
Warning: Homebrew/homebrew-core was not tapped properly! Run:
  rm -rf "/usr/local/Homebrew/Library/Taps/homebrew/homebrew-core"
  brew tap homebrew/core

(2)
Warning: "config" scripts exist outside your system or Homebrew directories.
`./configure` scripts often look for *-config scripts to determine if
software packages are installed, and which additional flags to use when
compiling and linking....

(3)
Warning: Unbrewed dylibs were found in /usr/local/lib.
If you didn't put them there on purpose they could cause problems when
building Homebrew formulae, and may need to be deleted....

(4)
Warning: Unbrewed header files were found in /usr/local/include.
If you didn't put them there on purpose they could cause problems when
building Homebrew formulae, and may need to be deleted.

(5)
Warning: Unbrewed '.pc' files were found in /usr/local/lib/pkgconfig.
If you didn't put them there on purpose they could cause problems when
building Homebrew formulae, and may need to be deleted....

(6)
Warning: Unbrewed static libraries were found in /usr/local/lib.
If you didn't put them there on purpose they could cause problems when
building Homebrew formulae, and may need to be deleted....
</span></code></pre></div></div>

<p>첫 번째 제시된 해결책처럼 homebrew-core 를 삭제해보자.<br />
터미널에 아래와 같이 명령어를 입력한다.</p>

<p><code class="language-plaintext highlighter-rouge">rm -rf "/usr/local/Homebrew/Library/Taps/homebrew/homebrew-core"</code></p>

<p>삭제가 되면 사용자에게로 입력권한이 돌아온다.<br />
이후 <code class="language-plaintext highlighter-rouge">brew doctor</code>를 실행하면 부족한 파일들을 설치한다.<br />
그래도 아래와 같은 Warning 메세지가 떴지만, 무시해도 된다.</p>

<div class="language-terminal highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="go">Please note that these warnings are just used to help the Homebrew maintainers
with debugging if you file an issue. If everything you use Homebrew for is
</span><span class="gp">working fine: please don't worry or file an issue;</span><span class="w"> </span>just ignore this. Thanks!
<span class="go">
Warning: "config" scripts exist outside your system or Homebrew directories.
`./configure` scripts often look for *-config sc....
</span></code></pre></div></div>

<p>이제 다시 루비를 설치한다.<br />
터미널을 켜고 <code class="language-plaintext highlighter-rouge">brew update --force --verbose</code> 를 입력한다.</p>

<p><img src="/assets/images/20221126_003_004.png" alt="" align="left" />
<img src="/assets/images/blank_1000px.png" alt="" width="500" /></p>

<p>설치에 성공했다. hooray!</p>]]></content><author><name>Jongya</name></author><category term="etc" /><category term="맥" /><category term="MAC" /><category term="홈브루" /><category term="homebrew" /><category term="설치" /><category term="오류" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/git_blog_samples/2022/11/24/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2022-11-24T13:46:06+09:00</published><updated>2022-11-24T13:46:06+09:00</updated><id>http://localhost:4000/git_blog_samples/2022/11/24/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/git_blog_samples/2022/11/24/welcome-to-jekyll.html"><![CDATA[<p>You’ll find this post in your <code class="language-plaintext highlighter-rouge">_posts</code> directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run <code class="language-plaintext highlighter-rouge">jekyll serve</code>, which launches a web server and auto-regenerates your site when a file is updated.</p>

<p>Jekyll requires blog post files to be named according to the following format:</p>

<p><code class="language-plaintext highlighter-rouge">YEAR-MONTH-DAY-title.MARKUP</code></p>

<p>Where <code class="language-plaintext highlighter-rouge">YEAR</code> is a four-digit number, <code class="language-plaintext highlighter-rouge">MONTH</code> and <code class="language-plaintext highlighter-rouge">DAY</code> are both two-digit numbers, and <code class="language-plaintext highlighter-rouge">MARKUP</code> is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.</p>

<p>Jekyll also offers powerful support for code snippets:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="k">def</span> <span class="nf">print_hi</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
  <span class="nb">puts</span> <span class="s2">"Hi, </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">"</span>
<span class="k">end</span>
<span class="n">print_hi</span><span class="p">(</span><span class="s1">'Tom'</span><span class="p">)</span>
<span class="c1">#=&gt; prints 'Hi, Tom' to STDOUT.</span></code></pre></figure>

<p>Check out the <a href="https://jekyllrb.com/docs/home">Jekyll docs</a> for more info on how to get the most out of Jekyll. File all bugs/feature requests at <a href="https://github.com/jekyll/jekyll">Jekyll’s GitHub repo</a>. If you have questions, you can ask them on <a href="https://talk.jekyllrb.com/">Jekyll Talk</a>.</p>]]></content><author><name>Jongya</name></author><category term="Git_Blog_Samples" /><summary type="html"><![CDATA[You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.]]></summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/git_blog_samples/2018/12/07/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2018-12-07T00:00:00+09:00</published><updated>2018-12-07T00:00:00+09:00</updated><id>http://localhost:4000/git_blog_samples/2018/12/07/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/git_blog_samples/2018/12/07/welcome-to-jekyll.html"><![CDATA[<p>You’ll find this post in your <code class="language-plaintext highlighter-rouge">_posts</code> directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run <code class="language-plaintext highlighter-rouge">jekyll serve</code>, which launches a web server and auto-regenerates your site when a file is updated.</p>

<p>To add new posts, simply add a file in the <code class="language-plaintext highlighter-rouge">_posts</code> directory that follows the convention <code class="language-plaintext highlighter-rouge">YYYY-MM-DD-name-of-post.ext</code> and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.</p>

<h2 id="section-1">section 1</h2>

<p>Jekyll also offers powerful support for code snippets:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="k">def</span> <span class="nf">print_hi</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
<span class="nb">puts</span> <span class="s2">"Hi, </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">"</span>
<span class="k">end</span>
<span class="n">print_hi</span><span class="p">(</span><span class="s1">'Tom'</span><span class="p">)</span>
<span class="c1">#=&gt; prints 'Hi, Tom' to STDOUT.</span></code></pre></figure>

<h2 id="section-2">section 2</h2>

<p>Check out the <a href="https://jekyllrb.com/docs/home">Jekyll docs</a> for more info on how to get the most out of Jekyll. File all bugs/feature requests at <a href="https://github.com/jekyll/jekyll">Jekyll’s GitHub repo</a>. If you have questions, you can ask them on <a href="https://talk.jekyllrb.com/">Jekyll Talk</a>.</p>

<p>$ a * b = c ^ b $</p>

<p>$ 2^{\frac{n-1}{3}} $</p>

<p>$ \int_a^b f(x)\,dx. $</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
  <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"Hello World!"</span><span class="p">;</span>
  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
<span class="c1">// prints 'Hi, Tom' to STDOUT.</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Person</span><span class="p">:</span>
  <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="n">age</span><span class="p">):</span>
    <span class="bp">self</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="n">name</span>
    <span class="bp">self</span><span class="p">.</span><span class="n">age</span> <span class="o">=</span> <span class="n">age</span>

<span class="n">p1</span> <span class="o">=</span> <span class="n">Person</span><span class="p">(</span><span class="s">"John"</span><span class="p">,</span> <span class="mi">36</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">p1</span><span class="p">.</span><span class="n">name</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">p1</span><span class="p">.</span><span class="n">age</span><span class="p">)</span>
</code></pre></div></div>]]></content><author><name>Jeffrey</name></author><category term="Git_Blog_Samples" /><category term="jekyll" /><category term="theme" /><category term="yat" /><summary type="html"><![CDATA[You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.]]></summary></entry><entry><title type="html">An exhibit of Markdown</title><link href="http://localhost:4000/git_blog_samples/2018/12/05/an-exhibit-of-markdown.html" rel="alternate" type="text/html" title="An exhibit of Markdown" /><published>2018-12-05T00:00:00+09:00</published><updated>2018-12-05T00:00:00+09:00</updated><id>http://localhost:4000/git_blog_samples/2018/12/05/an-exhibit-of-markdown</id><content type="html" xml:base="http://localhost:4000/git_blog_samples/2018/12/05/an-exhibit-of-markdown.html"><![CDATA[<p>This note demonstrates some of what <a href="https://daringfireball.net/projects/markdown/">Markdown</a> is capable of doing.</p>

<h2 id="an-exhibit-of-markdown">An exhibit of Markdown</h2>

<p><em>Note: Feel free to play with this page. Unlike regular notes, this doesn’t automatically save itself.</em></p>

<h2 id="basic-formatting">Basic formatting</h2>

<p>Paragraphs can be written like so. A paragraph is the basic block of Markdown. A paragraph is what text will turn into when there is no reason it should become anything else.</p>

<p>Paragraphs must be separated by a blank line. Basic formatting of <em>italics</em> and <strong>bold</strong> is supported. This <em>can be <strong>nested</strong> like</em> so.</p>

<h2 id="lists">Lists</h2>

<h3 id="ordered-list">Ordered list</h3>

<ol>
  <li>Item 1</li>
  <li>A second item</li>
  <li>Number 3</li>
  <li>Ⅳ</li>
</ol>

<p><em>Note: the fourth item uses the Unicode character for <a href="https://www.fileformat.info/info/unicode/char/2163/index.htm">Roman numeral four</a>.</em></p>

<h3 id="unordered-list">Unordered list</h3>

<ul>
  <li>An item</li>
  <li>Another item</li>
  <li>Yet another item</li>
  <li>And there’s more…</li>
</ul>

<h2 id="paragraph-modifiers">Paragraph modifiers</h2>

<h3 id="code-block">Code block</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Code blocks are very useful for developers and other people who look at code or other things that are written in plain text. As you can see, it uses a fixed-width font.
</code></pre></div></div>

<p>You can also make <code class="language-plaintext highlighter-rouge">inline code</code> to add code into other things.</p>

<h3 id="quote">Quote</h3>

<blockquote>
  <p>Here is a quote. What this is should be self explanatory. Quotes are automatically indented when they are used.</p>
</blockquote>

<h2 id="headings">Headings</h2>

<p>There are six levels of headings. They correspond with the six levels of HTML headings. You’ve probably noticed them already in the page. Each level down uses one more hash character.</p>

<h3 id="headings-can-also-contain-formatting">Headings <em>can</em> also contain <strong>formatting</strong></h3>

<h3 id="they-can-even-contain-inline-code">They can even contain <code class="language-plaintext highlighter-rouge">inline code</code></h3>

<p>Of course, demonstrating what headings look like messes up the structure of the page.</p>

<p>I don’t recommend using more than three or four levels of headings here, because, when you’re smallest heading isn’t too small, and you’re largest heading isn’t too big, and you want each size up to look noticeably larger and more important, there there are only so many sizes that you can use.</p>

<h2 id="urls">URLs</h2>

<p>URLs can be made in a handful of ways:</p>

<ul>
  <li>A named link to <a href="https://www.markitdown.net/">MarkItDown</a>. The easiest way to do these is to select what you want to make a link and hit <code class="language-plaintext highlighter-rouge">Ctrl+L</code>.</li>
  <li>Another named link to <a href="https://www.markitdown.net/">MarkItDown</a></li>
  <li>Sometimes you just want a URL like <a href="https://www.markitdown.net/">https://www.markitdown.net/</a>.</li>
</ul>

<h2 id="horizontal-rule">Horizontal rule</h2>

<p>A horizontal rule is a line that goes across the middle of the page.</p>

<hr />

<p>It’s sometimes handy for breaking things up.</p>

<h2 id="images">Images</h2>

<p>Markdown can also contain images. I’ll need to add something here sometime.</p>

<h2 id="finally">Finally</h2>

<p>There’s actually a lot more to Markdown than this. See the official <a href="https://daringfireball.net/projects/markdown/basics">introduction</a> and <a href="https://daringfireball.net/projects/markdown/syntax">syntax</a> for more information. However, be aware that this is not using the official implementation, and this might work subtly differently in some of the little things.</p>]]></content><author><name>Jongya</name></author><category term="Git_Blog_Samples" /><category term="example" /><category term="markdown" /><summary type="html"><![CDATA[This note demonstrates some of what Markdown is capable of doing.]]></summary></entry><entry><title type="html">Mathjax Test</title><link href="http://localhost:4000/git_blog_samples/2018/05/26/mathjax-test.html" rel="alternate" type="text/html" title="Mathjax Test" /><published>2018-05-26T00:00:00+09:00</published><updated>2018-05-26T00:00:00+09:00</updated><id>http://localhost:4000/git_blog_samples/2018/05/26/mathjax-test</id><content type="html" xml:base="http://localhost:4000/git_blog_samples/2018/05/26/mathjax-test.html"><![CDATA[<ul>
  <li>A safe integer is an integer that
    <ul>
      <li>can be exactly represented as an IEEE-754 double precision number, and</li>
      <li>whose IEEE-75 representation cannot be the result of rounding any other integer to fit the IEEE-754 representation</li>
    </ul>
  </li>
  <li>For example, $ 2 ^ {53} - 1 $ is a safe integer,
    <ul>
      <li>it can be exactly represented</li>
    </ul>
  </li>
</ul>]]></content><author><name>Jongya</name></author><category term="Git_Blog_Samples" /><category term="test" /><summary type="html"><![CDATA[A safe integer is an integer that can be exactly represented as an IEEE-754 double precision number, and whose IEEE-75 representation cannot be the result of rounding any other integer to fit the IEEE-754 representation For example, $ 2 ^ {53} - 1 $ is a safe integer, it can be exactly represented]]></summary></entry><entry><title type="html">Video example</title><link href="http://localhost:4000/git_blog_samples/2017/12/18/video-example.html" rel="alternate" type="text/html" title="Video example" /><published>2017-12-18T00:00:00+09:00</published><updated>2017-12-18T00:00:00+09:00</updated><id>http://localhost:4000/git_blog_samples/2017/12/18/video-example</id><content type="html" xml:base="http://localhost:4000/git_blog_samples/2017/12/18/video-example.html"><![CDATA[<h2 id="canon-in-d-pachelbels-canon---cello--piano-best-wedding-version">Canon in D (Pachelbel’s Canon) - Cello &amp; Piano [BEST WEDDING VERSION]</h2>
<p>Some of you know that we occasionally play for weddings. As you can imagine, we get a LOT of requests for Canon in D, and we discovered that there were no good arrangements available anywhere for piano and cello! Hard to believe given its popularity. So we decided to make our own! We tried to stick as closely to the original as possible (which was written for three violins and basso continuo), and we performed it <em>not</em> at a snail’s pace so the bride can actually make it down the aisle without putting everyone to sleep. 🙊(Yeah, we said it! Nobody likes a slow processional!) Also, the number one complaint about this piece from cellists is always how booooring it is to play because they literally have to play the same 8 bass notes over and over for the entire piece. Problem solved with this arrangement because the cello never has to play the bass! 🙌(The piano does, but we get lots of other fun stuff too so it’s ok!) So for all you musicians out there playing weddings, we hope you enjoy playing this arrangement a little more than the ones you were used to…You can get it from www.musicnotes.com. 😊Be sure to let us know in the comments if you do!</p>

<p><img src="//www.youtube.com/watch?v=Ptk_1Dc2iPY" alt="" /></p>

<h2 id="gucci-hallucination--the-line-animation--gucci">GUCCI HALLUCINATION / THE LINE ANIMATION / GUCCI</h2>
<p>BACKGROUND /</p>

<p>Gucci share their creative vision through a series of surreal animated paintings by acclaimed artist Ignasi Monreal and The Line Animation studio. The animations make up part of a larger campaign shared via social media, above the line and print.</p>

<p>APPROACH /</p>

<p>Our aim was to ground and accentuate the outlandish scenarios with ambient sound design. Neither proclaiming to be positive or negative, the sound conveys a sense of the uncanny and leaves the audience with nothing but their own interpretations. their creative vision through a series of surreal animated paintings by acclaimed artist Ignasi Monreal and The Line Animation studio. The animations make up part of a larger campaign shared via social media, above the line and print.</p>

<p><img src="https://vimeo.com/263856289" alt="" /></p>

<h2 id="finneas-demos-how-he-builds-songs-for-billie-eilish">FINNEAS Demos How He Builds Songs For Billie Eilish</h2>
<p>Grammy Award-winning musician and producer FINNEAS sits down with Pitchfork and closely examines his creative process while working on some of the biggest hit songs of the past couple years. FINNEAS explores the sounds that brought upon 
some of his greatest musical breakthroughs in songs such as bad guy, bury a friend, ocean eyes, when the party’s over, I Lost a Friend, Used to This and much more.</p>

<p><img src="https://dai.ly/x7tgcev" alt="" /></p>

<h2 id="2019-bmw-vision-m-next-concept-hd">2019 BMW Vision M NEXT Concept (HD)</h2>

<p>In future, drivers will be able to choose whether they wish to be driven or do the driving themselves. With the BMW Vision M NEXT, the BMW Group is revealing its take on how driving pleasure might look in future. It offers a foretaste of the BMW M brand’s electrified future by placing the focus squarely on the actively engaged driver. Intelligent technologies provide comprehensive yet carefully targeted assistance to turn them into the ultimate driver.</p>

<p><img src="https://www.dailymotion.com/video/x7bur2y" alt="" /></p>

<h2 id="this-is-the-poster-image">This is the poster image</h2>
<p>In modern browsers, adding a video to your page is as easy as adding an image. No longer do you need to deal with special plug-ins or require crazy markup, you can do it with a single element.
<img src="//www.html5rocks.com/en/tutorials/video/basics/devstories.webm" alt="video" /></p>]]></content><author><name>Jongya</name></author><category term="Git_Blog_Samples" /><category term="video" /><summary type="html"><![CDATA[Canon in D (Pachelbel’s Canon) - Cello &amp; Piano [BEST WEDDING VERSION] Some of you know that we occasionally play for weddings. As you can imagine, we get a LOT of requests for Canon in D, and we discovered that there were no good arrangements available anywhere for piano and cello! Hard to believe given its popularity. So we decided to make our own! We tried to stick as closely to the original as possible (which was written for three violins and basso continuo), and we performed it not at a snail’s pace so the bride can actually make it down the aisle without putting everyone to sleep. 🙊(Yeah, we said it! Nobody likes a slow processional!) Also, the number one complaint about this piece from cellists is always how booooring it is to play because they literally have to play the same 8 bass notes over and over for the entire piece. Problem solved with this arrangement because the cello never has to play the bass! 🙌(The piano does, but we get lots of other fun stuff too so it’s ok!) So for all you musicians out there playing weddings, we hope you enjoy playing this arrangement a little more than the ones you were used to…You can get it from www.musicnotes.com. 😊Be sure to let us know in the comments if you do!]]></summary></entry><entry><title type="html">Table example</title><link href="http://localhost:4000/git_blog_samples/2017/12/15/table-example.html" rel="alternate" type="text/html" title="Table example" /><published>2017-12-15T00:00:00+09:00</published><updated>2017-12-15T00:00:00+09:00</updated><id>http://localhost:4000/git_blog_samples/2017/12/15/table-example</id><content type="html" xml:base="http://localhost:4000/git_blog_samples/2017/12/15/table-example.html"><![CDATA[<h2 id="table-example-as-below">Table example as below</h2>

<p><strong>For now, these extended features are provided:</strong></p>

<ul>
  <li>Cells spanning multiple columns</li>
  <li>Cells spanning multiple rows</li>
  <li>Cells text align separately</li>
  <li>Table header not required</li>
  <li>Grouped table header rows or data rows</li>
</ul>

<h3 id="rowspan-and-colspan">Rowspan and Colspan</h3>
<p>^^ in a cell indicates it should be merged with the cell above.<br />
This feature is contributed by <a href="https://github.com/pmccloghrylaing">pmccloghrylaing</a>.</p>

<table>
  <thead>
    <tr>
      <th style="text-align: right">Stage</th>
      <th style="text-align: right">Direct Products</th>
      <th style="text-align: right">ATP Yields</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: right">Glycolysis</td>
      <td style="text-align: right">2 ATP                   |</td>
      <td style="text-align: right"> </td>
    </tr>
    <tr>
      <td style="text-align: right">^^</td>
      <td style="text-align: right">2 NADH</td>
      <td style="text-align: right">3–5 ATP</td>
    </tr>
    <tr>
      <td style="text-align: right">Pyruvaye oxidation</td>
      <td style="text-align: right">2 NADH</td>
      <td style="text-align: right">5 ATP</td>
    </tr>
    <tr>
      <td style="text-align: right">Citric acid cycle</td>
      <td style="text-align: right">2 ATP           |</td>
      <td style="text-align: right"> </td>
    </tr>
    <tr>
      <td style="text-align: right">^^</td>
      <td style="text-align: right">6 NADH</td>
      <td style="text-align: right">15 ATP</td>
    </tr>
    <tr>
      <td style="text-align: right">^^</td>
      <td style="text-align: right">2 FADH</td>
      <td style="text-align: right">3 ATP</td>
    </tr>
    <tr>
      <td style="text-align: right">30–32 ATP                         ||</td>
      <td style="text-align: right"> </td>
      <td style="text-align: right"> </td>
    </tr>
  </tbody>
</table>

<p>[ Net ATP yields per hexose]</p>

<h3 id="multiline">Multiline</h3>
<p>A backslash at end to join cell contents with the following lines.<br />
This feature is contributed by <a href="https://github.com/Lucas-C">Lucas-C</a>.</p>

<table>
  <thead>
    <tr>
      <th style="text-align: left">:     Easy Multiline     :||</th>
      <th style="text-align: left"> </th>
      <th style="text-align: left"> </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">Apple</td>
      <td style="text-align: left">Banana</td>
      <td style="text-align: left">Orange  \</td>
    </tr>
    <tr>
      <td style="text-align: left">Apple</td>
      <td style="text-align: left">Banana</td>
      <td style="text-align: left">Orange  \</td>
    </tr>
    <tr>
      <td style="text-align: left">Apple</td>
      <td style="text-align: left">Banana</td>
      <td style="text-align: left">Orange</td>
    </tr>
    <tr>
      <td style="text-align: left">Apple</td>
      <td style="text-align: left">Banana</td>
      <td style="text-align: left">Orange  \</td>
    </tr>
    <tr>
      <td style="text-align: left">Apple</td>
      <td style="text-align: left">Banana</td>
      <td style="text-align: left">Orange</td>
    </tr>
    <tr>
      <td style="text-align: left">Apple</td>
      <td style="text-align: left">Banana</td>
      <td style="text-align: left">Orange</td>
    </tr>
  </tbody>
</table>

<h3 id="headerless">Headerless</h3>
<p>Table header can be eliminated.</p>

<table>
  <tbody>
    <tr>
      <td>♜</td>
      <td> </td>
      <td>♝</td>
      <td>♛</td>
      <td>♚</td>
      <td>♝</td>
      <td>♞</td>
      <td>♜</td>
    </tr>
    <tr>
      <td> </td>
      <td>♟</td>
      <td>♟</td>
      <td>♟</td>
      <td> </td>
      <td>♟</td>
      <td>♟</td>
      <td>♟</td>
    </tr>
    <tr>
      <td>♟</td>
      <td> </td>
      <td>♞</td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
    </tr>
    <tr>
      <td> </td>
      <td>♗</td>
      <td> </td>
      <td> </td>
      <td>♟</td>
      <td> </td>
      <td> </td>
      <td> </td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td>♙</td>
      <td> </td>
      <td> </td>
      <td> </td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td>♘</td>
      <td> </td>
      <td> </td>
    </tr>
    <tr>
      <td>♙</td>
      <td>♙</td>
      <td>♙</td>
      <td>♙</td>
      <td> </td>
      <td>♙</td>
      <td>♙</td>
      <td>♙</td>
    </tr>
    <tr>
      <td>♖</td>
      <td>♘</td>
      <td>♗</td>
      <td>♕</td>
      <td>♔</td>
      <td> </td>
      <td> </td>
      <td>♖</td>
    </tr>
  </tbody>
</table>

<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code>|:     Fruits <span class="se">\|\|</span> Food           :|||
|:-------- |:-------- |:------------ |
| Apple    |: Apple  :|    Apple     <span class="err">\</span>
| Banana   |  Banana  |    Banana    <span class="err">\</span>
| Orange   |  Orange  |    Orange    |
|:   Rowspan is 5   :||:  How's it? :|
|^^   A. Peach       ||^^ 1. Fine    |
|^^   B. Orange      ||^^ 2. Bad  $I = <span class="se">\i</span>nt <span class="se">\r</span>ho R^{2} dV$     |
|^^   C. Banana      ||   It's OK! !<span class="p">[</span><span class="nv">example image</span><span class="p">][</span><span class="ss">my-image</span><span class="p">]</span>  |
</code></pre></div></div>

<h3 id="text-alignment">Text Alignment</h3>
<p>Table cell can be set alignment separately.</p>

<table>
  <thead>
    <tr>
      <th style="text-align: left">\:Fruits         |</th>
      <th style="text-align: left">Food   :</th>
      <th style="text-align: left"> </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">Apple</td>
      <td style="text-align: left">Banana</td>
      <td style="text-align: left">Orange</td>
    </tr>
    <tr>
      <td style="text-align: left">Apple</td>
      <td style="text-align: left">Banana</td>
      <td style="text-align: left">Orange</td>
    </tr>
  </tbody>
</table>

<table>
  <thead>
    <tr>
      <th style="text-align: left"> </th>
      <th style="text-align: left">Fruits\::        |</th>
      <th style="text-align: left"> </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">Apple</td>
      <td style="text-align: left">Banana</td>
      <td style="text-align: left">Orange</td>
    </tr>
    <tr>
      <td style="text-align: left">Apple</td>
      <td style="text-align: left">Banana</td>
      <td style="text-align: left">Orange</td>
    </tr>
  </tbody>
</table>

<table>
  <thead>
    <tr>
      <th style="text-align: left">: \:Fruits       :|</th>
      <th style="text-align: left"> </th>
      <th style="text-align: left">:       Food     :|</th>
      <th style="text-align: left"> </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">Apple</td>
      <td style="text-align: left">Banana</td>
      <td style="text-align: left">Orange</td>
      <td style="text-align: left">:   Strawberry    :</td>
    </tr>
    <tr>
      <td style="text-align: left">Apple  &amp;  Banana |</td>
      <td style="text-align: left">^^</td>
      <td style="text-align: left">Peach        :|</td>
      <td style="text-align: left"> </td>
    </tr>
  </tbody>
</table>

<table>
  <tbody>
    <tr>
      <td>: \:Fruits       :|</td>
      <td> </td>
      <td>:       Food     :|</td>
      <td> </td>
    </tr>
    <tr>
      <td>Apple</td>
      <td>Banana</td>
      <td>Orange</td>
      <td>:   Strawberry    :</td>
    </tr>
  </tbody>
</table>

<table>
  <thead>
    <tr>
      <th style="text-align: left">:     Fruits || Food           :||</th>
      <th style="text-align: left"> </th>
      <th style="text-align: left"> </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">Apple</td>
      <td style="text-align: left">: Apple  :</td>
      <td style="text-align: left">Apple     \</td>
    </tr>
    <tr>
      <td style="text-align: left">Banana</td>
      <td style="text-align: left">Banana</td>
      <td style="text-align: left">Banana    \</td>
    </tr>
    <tr>
      <td style="text-align: left">Orange</td>
      <td style="text-align: left">Orange</td>
      <td style="text-align: left">Orange</td>
    </tr>
    <tr>
      <td style="text-align: left">:   Rowspan is 5   :|</td>
      <td style="text-align: left">:  How’s it? :</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: left">^^   A. Peach       |</td>
      <td style="text-align: left">^^ 1. Fine</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: left">^^   B. Orange      |</td>
      <td style="text-align: left">^^ 2. Bad  $I = \int \rho R^{2} dV$</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: left">^^   C. Banana      |</td>
      <td style="text-align: left">It’s OK! ![example image](http://www.unexpected-vortices.com/sw/rippledoc/example-image.jpg "An exemplary image")</td>
      <td style="text-align: left"> </td>
    </tr>
  </tbody>
</table>]]></content><author><name>Jongya</name></author><category term="Git_Blog_Samples" /><category term="table" /><summary type="html"><![CDATA[Table example as below]]></summary></entry></feed>